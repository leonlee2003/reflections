What happens when you initialize a repository? Why do you need it?

When you initialize a repository a .git file is created that contains all of the global git settings for repositories.
Though no commits are created, you need to create a repository in order to start tracking files.

How is the staging area different from the working directory and the respository? What value you do you think it offers?

The staging area is different from the repository in that it contains only the files to be committed. The value of the staging area is that it allows the user to make 1 logical change to multiple files, and then go back and make a commit for each file changed. 

How can you use the staging area to make sure you have one commit per logical change?

As stated in the previous entry, the staging area can be used to make one logical change by allowing you to commit one file change at a time, even when multiple files were changed at once.

What are some situations when branches would be helpful in keeping your history organized. How would branches help? 

I think that branches would be useful when there is different versions of the program need to be created. For me, this may be different versions of the same program to handle different ways of formatting data. It would also be useful in cases where I wanted to experiment with a different idea. The branches would save time if I wanted to update the old idea without having to go back and find the specific commit id that corresponds to when the experimental idea was implemented.
